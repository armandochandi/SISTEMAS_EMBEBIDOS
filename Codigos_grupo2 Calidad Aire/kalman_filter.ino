// datos de CO
float datos[449]={ 0.20, 2.10, 0.20, 0.80, 0.20, 0.20, 0.80, 0.80, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 2.10, 0.80, 0.20, 0.20, 1.50, 0.20, 1.50, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 2.10, 0.20, 0.80, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.80, 1.50, 0.80, 2.10, 0.20, 0.20, 1.50, 1.50, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 2.10, 0.80, 0.80, 0.20, 0.20, 0.20, 2.10, 0.80, 0.20, 0.20, 0.20, 2.10, 0.20, 0.20, 0.20, 0.20, 2.10, 0.80, 2.10, 2.10, 0.80, 0.20, 0.20, 0.80, 0.20, 2.10, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 1.50, 2.10, 0.20, 1.50, 0.20, 2.10, 2.10, 0.20, 2.10, 0.80, 0.20, 0.80, 0.20, 0.20, 0.20, 0.20, 0.80, 1.50, 0.80, 0.20, 0.20, 2.10, 2.10, 1.50, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 2.10, 1.50, 2.10, 0.20, 0.20, 0.20, 1.50, 0.80, 0.20, 0.20, 0.80, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 2.10, 0.20, 2.10, 2.10, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 0.20, 2.10, 3.40, 2.10, 2.10, 2.10, 2.10, 2.10, 0.20, 2.10, 0.80, 0.20, 2.10, 0.20, 2.10, 0.20, 2.10, 0.20, 0.20, 0.20, 0.20, 2.10, 24.90, 0.20, 0.20, 2.10, 2.80, 0.20, 0.20, 2.10, 2.10, 2.10, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 0.80, 0.20, 2.10, 2.10, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 0.20, 25.50, 2.10, 0.20, 2.10, 0.20, 2.10, 0.20, 0.20, 0.20, 2.10, 14.50, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 2.10, 2.10, 2.10, 2.10, 0.20, 0.20, 0.20, 8.60, 10.60, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 2.10, 2.10, 2.10, 0.20, 2.10, 0.20, 2.10, 10.60, 0.20, 2.10, 2.10, 0.80, 18.40, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 0.80, 2.10, 2.10, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 0.20, 0.20, 2.10, 0.20, 0.20, 0.20, 0.20, 2.10, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 2.10, 2.10, 2.10, 2.10, 2.10, 0.20, 0.20, 3.40, 2.10, 0.20, 2.10, 0.80, 10.60, 0.80, 0.20, 2.10, 2.10, 2.10, 0.20, 0.20, 0.20, 2.10, 21.00, 0.20, 2.10, 2.10, 2.10, 2.10, 0.20, 0.20, 0.20, 0.20, 2.10, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 0.20, 2.10, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 0.20, 2.10, 24.90, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 2.10, 0.20, 0.20, 0.20, 0.20, 2.10, 0.20, 2.10, 0.20, 0.20, 0.20, 2.10, 1.50, 1.50, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 2.10, 2.10, 0.80, 4.70, 0.20, 2.10, 2.10, 2.10, 2.10, 0.20, 0.20, 2.10, 9.90, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 1.50, 0.20, 0.20, 2.10, 0.20, 0.20, 0.20, 2.10, 2.10, 0.20, 0.20, 0.20, 2.10, 2.10};
// kalman variables
float varVolt = 1.12184278324081E-05;  // variance determined using excel and reading samples of raw sensor data
float varProcess = 1e-8;
float Pc = 0.0;
float G = 0.0;
float P = 1.0;
float Xp[449];
float Zp[449];
float Xe[449];
void setup() {
  // open a serial connection to display values
  Serial.begin(115200);
}

void loop() {
  //int sensorVal = analogRead(sensorPin);     // read the value on AnalogIn pin 0 and store it in a variable
  //float voltage = sensorVal * 5.0 / 1023.0;  // convert the ADC reading to voltage
 for(int j=0;j<450;j++){
  // kalman process
  Pc = P + varProcess;
  G = Pc/(Pc + varVolt);    // kalman gain
  P = (1-G)*Pc;
  Xp[j] = Xe[j];
  Zp[j] = Xp[j];
  Xe[j] = G*(datos[j]-Zp[j])+Xp[j];   // the kalman estimate of the sensor voltage
  Serial.print(datos[j]);
  Serial.print(' ');
  Serial.print(Xe[j]);
  Serial.println();
  delay(50);
}
}
// function to print out floats in HEX
void serialFloatPrint(float f) {
  byte * b = (byte *) &f;
  Serial.print("#");
  for(int i=0; i<4; i++) {
    byte b1 = (b[i] >> 4) & 0x0f;
    byte b2 = (b[i] & 0x0f);
    char c1 = (b1 < 10) ? ('0' + b1) : 'A' + b1 - 10;
    char c2 = (b2 < 10) ? ('0' + b2) : 'A' + b2 - 10;
    Serial.print(c1);
    Serial.print(c2);
  }
}
